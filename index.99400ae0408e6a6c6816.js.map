{"version":3,"file":"index.99400ae0408e6a6c6816.js","mappings":";;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4CAAe,aAAa,EAAC;;;;;ACtBQ;AACjB;AACe;;AAEnC;AACA;AACA;;AAEA,iBAAiB,KAAa;AAC9B,0BAA0B,KAAa;AACvC,oBAAoB,KAAa;AACjC,oBAAoB,KAAa;AACjC,kBAAkB,KAAa,4BAA4B,oBAAS;;AAEpE;AACA;;AAEA;AACA;;AAEA,gDAAe,IAAI,EAAC;;;;;;;;;;;;;;;ACpBiB;AACjB;AACY;AACA;AACE;AACA;AACE;AACE;;AAEtC;AACA;AACA,iBAAiB,qBAAK,EAAE,qBAAK,EAAE,sBAAM,EAAE,sBAAM,EAAE,uBAAO,EAAE,wBAAQ;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,KAAa;;AAE9B,wBAAwB,6BAA6B;AACrD,qBAAqB,KAAa;AAClC,sBAAsB,KAAa;AACnC,sBAAsB,KAAa;AACnC,qBAAqB,KAAa;;AAElC;AACA;AACA;;AAEA;AACA;;AAEA,gDAAe,IAAI,EAAC;;;;;;;;;ACrCiB;AACd;AACU;AACI;AACI;;AAEzC;AACA;AACA;;AAEA,oBAAoB,KAAa;AACjC,2BAA2B,KAAa;AACxC,qBAAqB,KAAa,qCAAqC,qBAAU;AACjF,sBAAsB,KAAa;AACnC,6BAA6B,KAAa;AAC1C,uBAAuB,KAAa,uCAAuC,uBAAY;AACvF,wBAAwB,KAAa;AACrC,gBAAgB,KAAa,6BAA6B,mBAAQ;;AAElE;AACA;AACA;;AAEA;AACA;;AAEA,sDAAe,OAAO,EAAC;;;AC1Bc;AACf;;AAEtB;AACA,mBAAmB,KAAa;AAChC,wBAAwB,KAAa;AACrC,sBAAsB,KAAa;AACnC,oBAAoB,KAAa;AACjC,oBAAoB,KAAa;AACjC,uBAAuB,KAAa;;AAEpC;AACA;;AAEA;AACA;;AAEA,oDAAe,MAAM,EAAC;;;ACjBe;AACN;;AAE/B;AACA;AACA,eAAe,aAAM,IAAI,SAAI;AAC7B;;AAEA,sDAAe,eAAe,EAAC;;;ACRN;AACJ;AACqB;AACA;AACS;AACQ;;AAE3D,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,SAAI;AAC3B;AACA;AACA,uBAAuB,SAAI;AAC3B;AACA;AACA,uBAAuB,eAAO;AAC9B;AACA;AACA","sources":["webpack://restaurant-page/./src/components/utils.js","webpack://restaurant-page/./src/components/home/home.js","webpack://restaurant-page/./src/components/menu/menu.js","webpack://restaurant-page/./src/components/contact/contact.js","webpack://restaurant-page/./src/components/header/header.js","webpack://restaurant-page/./src/components/initialpageload.js","webpack://restaurant-page/./src/index.js"],"sourcesContent":["const createElement = (type, classList, text, image) => {\n    const element = document.createElement(type);\n\n    if (Array.isArray(classList)) {\n        classList.forEach(className => {\n            element.classList.add(className);\n        });\n    } else if (classList) {\n        element.classList.add(classList);\n    }\n\n    if (text) {\n        element.textContent = text;\n    }\n\n    if (image) {\n        element.src = image;\n    }\n\n    return element;\n};\n\nexport default createElement;\n","import createElement from '../utils';\nimport './home.css';\nimport imageFile from './chef.png';\n\nconst home = () => {\n    const text = ['Welcome to Arepa Bistro, where every bite tells a story of flavor, culture, and community.',\n    'Our mouthwatering arepas are made with the finest ingredients and a passion for sharing the tastes of Venezuela with the world.'];\n\n    const home = createElement('div', 'home');\n    const textContainer = createElement('div', 'text-container');\n    const textOne = createElement('div', 'text-1', text[0]);\n    const textTwo = createElement('div', 'text-2', text[1]);\n    const image = createElement('img', 'home-image', null, imageFile);\n\n    textContainer.append(textOne, textTwo);\n    home.append(textContainer, image);\n\n    return home;\n};\n\nexport default home;\n","import createElement from '../utils';\nimport './menu.css';\nimport reina from './reina.jpg';\nimport pelua from './pelua.jpg';\nimport domino from './domino.jpg';\nimport perico from './perico.jpg';\nimport llanera from './llanera.jpg';\nimport patapata from './patapata.jpg';\n\nconst menu = () => {\n    const cards = {\n        images: [reina, pelua, domino, perico, llanera, patapata],\n        titles: ['Reina Pepiada', 'La pelúa', 'Dominó', 'Perico', 'Llanera', 'Patapata'],\n        text: ['Arepa filled with shredded chicken, avocado, mayonnaise, and yellow cheese.',\n               'Arepa filled with shredded beef, yellow cheese, and tomato sauce.',\n               'Arepa filled with yellow cheese, ham, and bacon.',\n               'Arepa filled with scrambled eggs, onion, tomato, and cilantro.',\n               'Arepa filled with roast beef, yellow cheese, avocado, and tomato.',\n               'Arepa filled with yellow cheese, onion, and tomato.'\n              ]\n    };\n\n    const menu = createElement('div', 'menu');\n\n    for (let index = 0; index < cards.images.length; index++) {\n        const card = createElement('div', 'menu-card');\n        const image = createElement('img', 'menu-image', null, cards.images[index]);\n        const title = createElement('div', 'menu-title', cards.titles[index]);\n        const text = createElement('div', 'menu-text', cards.text[index]);\n\n        card.append(image, title, text);\n        menu.append(card);\n    }\n\n    return menu;\n};\n\nexport default menu;\n","import createElement from '../utils';\nimport './contact.css';\nimport mapImage from './map.png';\nimport phoneImage from './phone.png';\nimport addressImage from './address.png';\n\nconst contact = () => {\n    const text = ['(617) 421-6658',\n    '51 Deepwood Pkwy, Phoenix, Arizona, 57521'];\n\n    const contact = createElement('div', 'contact');\n    const phoneContainer = createElement('div', 'contact-phone');\n    const phoneImg = createElement('img', 'contact-phone-image', null, phoneImage);\n    const phoneText = createElement('div', 'contact-phone-text', text[0]);\n    const addressContainer = createElement('div', 'contact-address');\n    const addressImg = createElement('img', 'contact-address-image', null, addressImage);\n    const addressText = createElement('div', 'contact-address-text', text[1]);\n    const map = createElement('img', 'contact-map', null, mapImage);\n\n    phoneContainer.append(phoneImg, phoneText);\n    addressContainer.append(addressImg, addressText);\n    contact.append(phoneContainer, addressContainer, map);\n\n    return contact;\n};\n\nexport default contact;\n","import createElement from '../utils';\nimport './header.css';\n\nconst header = () => {\n    const header = createElement('div', 'header');\n    const headerTitle = createElement('div', 'header-title', 'Arepa Bistro');\n    const headerNav = createElement('div', 'header-nav');\n    const navHome = createElement('div', ['nav-home', 'selected', 'header-btn'], 'Home');\n    const navMenu = createElement('div', ['nav-menu', 'header-btn'], 'Menu');\n    const navContact = createElement('div', ['nav-contact', 'header-btn'], 'Contact');\n\n    headerNav.append(navHome, navMenu, navContact);\n    header.append(headerTitle, headerNav);\n\n    return header;\n};\n\nexport default header;\n","import header from './header/header';\nimport home from './home/home';\n\nconst initialPageLoad = () => {\n    const app = document.querySelector('#content');\n    app.append(header(), home());\n};\n\nexport default initialPageLoad;\n","import './preflight.css';\nimport './style.css';\nimport home from './components/home/home';\nimport menu from './components/menu/menu';\nimport contact from './components/contact/contact';\nimport initialPageLoad from './components/initialpageload';\n\ninitialPageLoad();\n\nconst app = document.querySelector('#content');\nconst tabs = {\n    home: document.querySelector('.nav-home'),\n    menu: document.querySelector('.nav-menu'),\n    contact: document.querySelector('.nav-contact')\n};\n\n// Add event listeners to tabs\nfor (const tab in tabs) {\n    if (Object.hasOwnProperty.call(tabs, tab)) {\n        const element = tabs[tab];\n        element.addEventListener('click', changeTab);\n    }\n}\n\nfunction changeTab(event) {\n    const currentTab = event.target;\n\n    // Remove 'selected' class from all tabs\n    for (const tab in tabs) {\n        if (Object.hasOwnProperty.call(tabs, tab)) {\n            const element = tabs[tab];\n            element.classList.remove('selected');\n        }\n    }\n\n    currentTab.classList.add('selected');\n\n    app.removeChild(app.lastChild);\n    const selection = currentTab.textContent.toLowerCase();\n\n    switch (selection) {\n        case 'home':\n            app.append(home());\n            break;\n        case 'menu':\n            app.append(menu());\n            break;\n        case 'contact':\n            app.append(contact());\n            break;\n    }\n}\n"],"names":[],"sourceRoot":""}